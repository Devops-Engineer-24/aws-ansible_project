name: AWS EC2 Admin Tasks

on:
  workflow_dispatch:
    inputs:
      task:
        description: 'Choose the task to run (user_create, file_update, log_cleanup)'
        required: true
        default: 'user_create'
        type: choice
        options:
          - user_create
          - file_update
          - log_cleanup

jobs:
  ansible:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install ansible boto3

      - name: Run User Creation Playbook
        if: ${{ github.event.inputs.task == 'user_create' }}
        run: |
          ansible-playbook -i inventory/aws_ec2.yml playbook_user_management.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run File Update Playbook
        if: ${{ github.event.inputs.task == 'file_update' }}
        run: |
          ansible-playbook -i inventory/aws_ec2.yml playbook_file_management.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Run Log Cleanup Playbook
        if: ${{ github.event.inputs.task == 'log_cleanup' }}
        run: |
          ansible-playbook -i inventory/aws_ec2.yml playbook_log_management.yml
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
